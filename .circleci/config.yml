version: 2.1

commands:
    install-mapbox-token:
         steps:
             - run:
                 name: Install Mapbox Access Token
                 command: echo "foo" > ~/.mapbox

    restore-cache:
         steps:
             - restore_cache:
                 name: Restore cache
                 keys:
                    - carthage-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cartfile.resolved" }}

    save-cache:
        steps:
             - save_cache:
                 key: carthage-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cartfile.resolved" }}
                 paths:
                     - Carthage
                     - Cartfile.resolved

    install-carthage:
        steps:
            - run:
                name: Install Carthage
                command: |
                    curl -OL "https://github.com/Carthage/Carthage/releases/download/0.38.0/Carthage.pkg"
                    sudo installer -pkg Carthage.pkg -target /

    publish-codecov:
        steps:
            - run:
                name: Publish Code Coverage
                command: bash <(curl -s https://codecov.io/bash)
    carthage-bootstrap:
        steps:
            - run:
                name: Dependencies
                command: carthage bootstrap --platform all --cache-builds --configuration Debug --use-xcframeworks   

jobs:
  detect-breaking-changes:
    macos:
      xcode: 13.3.0
    steps:
      - checkout
      - install-mapbox-token
      - run:
          name: "Diagnose breaking changes"
          command: |
            swift package diagnose-api-breaking-changes \
                --products MapboxDirections \
                --baseline-dir swift-package-baseline \
                --breakage-allowlist-path swift-package-baseline/breakage-allowlist-path.txt \
                "$(cat swift-package-baseline/baseline.txt)" \
              | tee diagnose-output.txt \
              || TRUE
      - run:
          name: "Parse breaking changes"
          command: |
            EXIT_CODE=0
            cat diagnose-output.txt | sed -n '/API breakage:/p' > breaking-changes.txt
            if [ -s breaking-changes.txt ]; then
              echo "Breaking changes detected"
              cat breaking-changes.txt
            else
              rm breaking-changes.txt
            fi
      - store_artifacts:
          path: breaking-changes.txt
          destination: breaking-changes.txt
      - run:
          name: "Fail if breaking changes detected"
          command: |
            if [ -f breaking-changes.txt ]; then
              exit 1
            fi
  spm-linux-job:
    docker:
      - image: swift:5.6
    steps:
      - checkout
      - run: swift build
      - run: swift test

  spm-job:
    parameters:
      xcode:
        type: string
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - run: swift build
  
  carthage-integration-test:
    parameters:
      xcode:
        type: string
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - install-mapbox-token
      - install-carthage
      - run:
          name: "Create integration Cartfile"
          command: |
            echo 'github "mapbox/mapbox-directions-swift"' \"$CIRCLE_SHA1\" > Cartfile 
      - run:
          name: "Build"
          command: |
            carthage bootstrap --platform all --use-netrc --use-xcframeworks
  example-app-build:
    macos:
      xcode: "13.4.1"
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - install-mapbox-token
      - install-carthage
      - restore-cache
      - carthage-bootstrap
      - run:
          name: "Build example app"
          command: xcodebuild -sdk iphonesimulator -project MapboxDirections.xcodeproj -scheme 'Example' -destination 'platform=iOS Simulator,OS=15.5,name=iPhone 13 Pro Max' clean build
      - save-cache

  build-job:
    parameters:
      xcode:
        type: string
        default: "13.4.1"
      device:
        type: string
        default: "iPhone 13"
      iOS:
        type: string
        default: "15.5"
      watchOS:
        type: string
        default: "8.5"
      tvOS:
        type: string
        default: "15.4"
      test:
        type: boolean
        default: true
      codecoverage:
        type: boolean
        default: false
    macos:
      xcode: << parameters.xcode >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - install-mapbox-token
      - install-carthage
      - restore-cache
      - run:
          name: Install prerequisites
          command: |
            if [ $(xcversion simulators | grep -cF "iOS << parameters.iOS >> Simulator (installed)") -eq 0 ]; then xcversion simulators --install="iOS << parameters.iOS >>" || true; fi
      - carthage-bootstrap
      - run:
          name: iOS
          command: xcodebuild -sdk iphonesimulator -project MapboxDirections.xcodeproj -scheme 'MapboxDirections iOS' -destination 'platform=iOS Simulator,OS=<< parameters.iOS >>,name=<< parameters.device >>' clean build <<# parameters.test >>test<</ parameters.test >><<# parameters.codecoverage >> -enableCodeCoverage "YES"<</ parameters.codecoverage >>
      - when:
          condition: << parameters.codecoverage >>
          steps:
            - publish-codecov
      - run:
          name: tvOS
          command: xcodebuild -project MapboxDirections.xcodeproj -scheme 'MapboxDirections tvOS' -destination 'platform=tvOS Simulator,name=Apple TV,OS=<< parameters.tvOS >>' clean build <<# parameters.test >>test <</ parameters.test >> <<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >>
      - when:
          condition: << parameters.codecoverage >>
          steps:
            - publish-codecov
      - run:
          name: macOS
          command: xcodebuild -project MapboxDirections.xcodeproj -scheme 'MapboxDirections Mac' clean build<<# parameters.test >> test <</ parameters.test >><<# parameters.codecoverage >>-enableCodeCoverage YES<</ parameters.codecoverage >>
      - run:
          name: watchOS
          command: xcodebuild -project MapboxDirections.xcodeproj -scheme 'MapboxDirections watchOS' -destination 'platform=watchOS Simulator,name=Apple Watch Series 5 - 44mm,OS=<< parameters.watchOS >>' clean build
      - save-cache

workflows:
  workflow:
    jobs:
      - detect-breaking-changes:
          name: "Detect Breaking Changes"
      - build-job:
          name: "Dev Build: Xcode 13.4.1"
      - carthage-integration-test:
          name: "Carthage Integration Test 12.5.1"
          xcode: "12.5.1"
      - carthage-integration-test:
          name: "Carthage Integration Test 13.4.1"
          xcode: "13.4.1"
      - spm-job:
          name: "SPM build 12.5.1"
          xcode: "12.5.1"
      - spm-job:
          name: "SPM build 13.4.1"
          xcode: "13.4.1"
      - spm-linux-job:
          name: "SPM Ubuntu build"
      - example-app-build:
          name: "Build example app"
